<p style="color: green"><%= notice %></p>

<h1 class="title">Search Events</h1>

<div id="map" style="height:500px">

</div>

<div id="events" class="card">

<%= search_form_for @q do |f| %>

<div class="search pt-3 d-flex justify-content-center">
  <div>
    <%= f.label :name_cont %>
    <%= f.text_field :name_cont %>
  </div>
  <div class="search px-2">
    <%= f.label :started_at_gteq, "On or after " %>
    <%= f.date_field :started_at_gteq %>
  </div>
  <div class="search px-2">
    <%= f.submit %>
  </div>
  <div class="search px-2">
    <%= link_to "Clear", events_path %>
  </div>
  <% end %>
</div>

  <% @events.each do |event| %>
    <div class="d-flex ps-4 mb-2 mycard justify-content-between">
      <div class="row">
        <div class="col-6">
          <% if event.photo.present?%>
          <%= image_tag event.photo.url, alt:"profile pic", class:"profile-pic" %>
          <% end %>
          <strong>Name:</strong>
            <%= event.name %>
        </div>
        <div class="col-6">
          <p class="card-text"> 
            <strong>Where:</strong>
            <%= event.address %>
            <br>
            <strong>When:</strong>
            <%= event.started_at.strftime("%B %d, %Y") %></p>
            <%= link_to "Show this event", event, class:"btn btn-primary" %>
        </div>
      </div>
    </div>
  <% end %>
<div class="d-flex justify-content-around p-3">
  <%= paginate @events, :container => false %>
</div>
</div>

<script type="module">
document.addEventListener('DOMContentLoaded', function () {
  function initMap() {
    const map = new google.maps.Map(document.getElementById("map"), {
      center: { lat: 41.87657590074282, lng: -87.61936464305545 },
      zoom: 3,
      mapId: "DEMO_MAP_ID", // Map ID is required for advanced markers.
    });

    const events = JSON.parse('<%= j @events.to_json(only: [:latitude, :longitude, :name]).gsub("'", "\\\\'").html_safe %>');

    console.log("Loaded events data:", events); // Debugging: Check if events data is loaded

    const markerImage = {
        url: "<%= asset_path('bulb.png') %>", // Path to the image
        scaledSize: new google.maps.Size(40, 40), // Resize the marker (width, height in pixels)
        anchor: new google.maps.Point(15, 15) // Optional: Adjust anchor point (center of the icon)
    };
    console.log(markerImage);


    events.forEach((event) => {
      if (event.latitude && event.longitude) { // Debugging: Verify marker data
        const marker = new AdvancedMarkerElement({
          position: { lat: event.latitude, lng: event.longitude },
          map,
          content: markerImage,
          icon: markerImage,
          title: event.name,
        });
              // Optionally, add an info window to each marker
        const infowindow = new google.maps.InfoWindow({
          content: `<h3>${event.name}</h3>`,
      });

        marker.addListener('click', ({domEvent, latLng}) => {
          const {target} = domEvemt
          infowindow.open(map, marker);
      }); 
      }  
    });
  }
});

</script>

<script>
  (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
    key: "<%= ENV['GOOGLE_MAPS'] %>",
    v: "weekly",
    // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
    // Add other bootstrap parameters as needed, using camel case.
  });
</script>
